<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.beauty</groupId>
    <artifactId>mhzc</artifactId>
    <name>mhzc_service</name>
    <version>0.1.0</version>
    <packaging>pom</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.4.RELEASE</version>
        <relativePath/>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <maven.test.skip>true</maven.test.skip>
    </properties>

    <modules>
        <module>mhzc-core</module>
        <module>mhzc-db</module>
<!--        <module>mhzc-wx-api</module>-->
        <module>mhzc-admin-api</module>
        <module>mhzc-all</module>
<!--        <module>mhzc-all-war</module>-->
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.beauty</groupId>
                <artifactId>mhzc-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.beauty</groupId>
                <artifactId>mhzc-db</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.beauty</groupId>
                <artifactId>mhzc-admin-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.beauty</groupId>
                <artifactId>mhzc-all</artifactId>
                <version>${project.version}</version>
            </dependency>

<!--            <dependency>-->
<!--                <groupId>com.beauty</groupId>-->
<!--                <artifactId>mhzc-wx-api</artifactId>-->
<!--                <version>${project.version}</version>-->
<!--            </dependency>-->
            <!-- Spring Boot Mybatis 依赖 -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>1.3.2</version>
            </dependency>

            <!-- Spring Boot pagehelper 依赖 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>1.2.5</version>
            </dependency>

            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring-boot-web-starter</artifactId>
                <version>1.4.0</version>
            </dependency>

            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>6.1.0.Final</version>
            </dependency>

            <!-- MySQL 连接驱动依赖 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>8.0.16</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>1.1.10</version>
            </dependency>

            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-pay</artifactId>
                <version>3.3.0</version>
            </dependency>

            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-miniapp</artifactId>
                <version>3.3.0</version>
            </dependency>

            <dependency>
                <groupId>com.github.qcloudsms</groupId>
                <artifactId>qcloudsms</artifactId>
                <version>1.0.5</version>
            </dependency>

            <dependency>
                <groupId>com.qcloud</groupId>
                <artifactId>cos_api</artifactId>
                <version>5.6.8</version>
            </dependency>

            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>2.5.0</version>
            </dependency>

            <dependency>
                <groupId>com.qiniu</groupId>
                <artifactId>qiniu-java-sdk</artifactId>
                <version>[7.2.0, 7.2.99]</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-json</artifactId>
                <version>2.1.5.RELEASE</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-mail</artifactId>
                <version>2.1.5.RELEASE</version>
            </dependency>

            <dependency>
		       <groupId>io.springfox</groupId>
			   <artifactId>springfox-swagger2</artifactId>
			   <version>2.9.2</version>
		   </dependency>

		<dependency>
			  <groupId>io.springfox</groupId>
			  <artifactId>springfox-swagger-ui</artifactId>
			  <version>2.9.2</version>
		</dependency>

		<!--引入ui包-->
		<dependency>
	 		 <groupId>com.github.xiaoymin</groupId>
	 		 <artifactId>swagger-bootstrap-ui</artifactId>
	 		<version>1.9.6</version>
		</dependency>
		<dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>25.1-jre</version>
        </dependency>

            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>3.4.1</version>
            </dependency>

            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-core</artifactId>
                <version>4.0.3</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- 热部署模块 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- 测试模块 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>1.6.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>1.6.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>io.fabric8</groupId>-->
<!--                <artifactId>docker-maven-plugin</artifactId>-->
<!--                <version>0.33.0</version>-->

<!--                <configuration>-->
<!--                    &lt;!&ndash; Docker 远程管理地址&ndash;&gt;-->
<!--                    <dockerHost>http://39.97.114.146:2375</dockerHost>-->
<!--                    &lt;!&ndash; Docker 推送镜像仓库地址&ndash;&gt;-->
<!--                    <pushRegistry>http://39.97.114.146:5000</pushRegistry>-->
<!--                    <images>-->
<!--                        <image>-->
<!--                            &lt;!&ndash;由于推送到私有镜像仓库，镜像名需要添加仓库地址&ndash;&gt;-->
<!--                            <name>39.97.114.146:5000/mhzc/${project.name}:${project.version}</name>-->
<!--                            &lt;!&ndash;定义镜像构建行为&ndash;&gt;-->
<!--                            <build>-->
<!--                                &lt;!&ndash;定义基础镜像&ndash;&gt;-->
<!--                                <from>java:8</from>-->
<!--                                <args>-->
<!--                                    <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>-->
<!--                                </args>-->
<!--                                &lt;!&ndash;定义哪些文件拷贝到容器中&ndash;&gt;-->
<!--                                <assembly>-->
<!--                                    &lt;!&ndash;定义拷贝到容器的目录&ndash;&gt;-->
<!--                                    <targetDir>/var</targetDir>-->
<!--                                    &lt;!&ndash;只拷贝生成的jar包&ndash;&gt;-->
<!--                                    <descriptorRef>artifact</descriptorRef>-->
<!--                                </assembly>-->
<!--                                &lt;!&ndash;定义容器启动命令&ndash;&gt;-->
<!--                                <entryPoint>["java", "-jar","/${project.build.finalName}.jar"]</entryPoint>-->
<!--                                &lt;!&ndash;定义维护者&ndash;&gt;-->
<!--                                <maintainer>zhx</maintainer>-->
<!--                            </build>-->
<!--                            <run>-->
<!--                                &lt;!&ndash;设置容器名，可采用通配符&ndash;&gt;-->
<!--                                <containerNamePattern>${project.artifactId}</containerNamePattern>-->
<!--                                &lt;!&ndash;设置端口映射&ndash;&gt;-->
<!--                                <ports>-->
<!--                                    <port>9000:9000</port>-->
<!--                                </ports>-->
<!--                                &lt;!&ndash;设置容器间连接&ndash;&gt;-->
<!--                                <links>-->
<!--                                    <link>mysql:db</link>-->
<!--                                </links>-->
<!--                                &lt;!&ndash;设置容器和宿主机目录挂载&ndash;&gt;-->
<!--                                <volumes>-->
<!--                                    <bind>-->
<!--                                        <volume>/etc/localtime:/etc/localtime</volume>-->
<!--                                        <volume>/usr/tjq/top_level/project/mhzc/${project.artifactId}/storage:/var/storage</volume>-->
<!--                                    </bind>-->
<!--                                </volumes>-->
<!--                            </run>-->
<!--                        </image>-->
<!--                    </images>-->
<!--                </configuration>-->
<!--            </plugin>-->
        </plugins>
    </build>

</project>